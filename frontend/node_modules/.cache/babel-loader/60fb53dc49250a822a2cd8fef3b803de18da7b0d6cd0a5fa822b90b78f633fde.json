{"ast":null,"code":"var _jsxFileName = \"C:\\\\user-datasubmission-react\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import { useState } from 'react';\n\n// function App() {\n//   const [formData, setFormData] = useState({\n//     ID: '',\n//     AccountID: ''\n//   });\n\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData({ ...formData, [name]: value });\n//   };\n\n//   const onSubmit = async (e) => {\n//     e.preventDefault();\n\n//     try {\n//       const response = await fetch('/details', {\n//         method: \"POST\",\n//         headers: {\n//           'Content-Type': 'application/json'\n//         },\n//         body: JSON.stringify(formData)\n//       });\n\n//       if (response.ok) {\n//         console.log(\"data posted\")\n//         alert(\"Data submitted successfully!\");\n//       } else {\n//         console.error(\"Something went wrong\");\n//       }\n//     } catch (error) {\n//       console.error(\"Error:\", error.message);\n//     }\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <form onSubmit={onSubmit}>\n//         ID<input type=\"text\" name=\"ID\" value={formData.ID} onChange={handleInputChange} />\n//         <br></br>\n//         AccountID <input type=\"email\" name=\"AccountID\" value={formData.AccountID} onChange={handleInputChange} />\n//         <br></br>\n//         <input type=\"submit\" value=\"ADD\" />\n//       </form>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n// import React, { useState } from 'react';\n\n// function App() {\n//   const [formData, setFormData] = useState({\n//     ID: '',\n//     AccountID: ''\n//   });\n\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData({ ...formData, [name]: value });\n//   };\n\n//   const onSubmit = async (e) => {\n//     e.preventDefault();\n\n//     try {\n//       const response = await fetch('/details', {\n//         method: \"POST\",\n//         headers: {\n//           'Content-Type': 'application/json'\n//         },\n//         body: JSON.stringify(formData)\n//       });\n\n//       if (response.ok) {\n//         console.log(\"Data submitted successfully!\");\n//       } else {\n//         console.error(\"Something went wrong\");\n//       }\n//     } catch (error) {\n//       console.error(\"Error:\", error.message);\n//     }\n//   };\n\n//   const executeRequest = async () => {\n//     try {\n//       const response = await fetch('http://localhost:8000/execute',{\n//       method: \"GET\"\n//     });\n//       if (response.ok) {\n//         const data = await response.json();\n//         console.log(data);\n//       } else {\n//         throw new Error('Network response was not ok');\n//       }\n//     } catch (error) {\n//       console.error('Fetch Error:', error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <form onSubmit={onSubmit}>\n//         ID<input type=\"text\" name=\"ID\" value={formData.ID} onChange={handleInputChange} />\n//         <br></br>\n//         AccountID <input type=\"email\" name=\"AccountID\" value={formData.AccountID} onChange={handleInputChange} />\n//         <br></br>\n//         <input type=\"submit\" value=\"ADD\" />\n//       </form>\n//       <button onClick={executeRequest}>Post</button>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport { useState } from 'react';\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [formData, setFormData] = useState({\n    ID: '',\n    AccountID: ''\n  });\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const onSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('/details', {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      if (response.ok) {\n        console.log(\"Data posted successfully\");\n        alert(\"Data submitted successfully!\");\n      } else {\n        console.error(\"Something went wrong\");\n      }\n    } catch (error) {\n      console.error(\"Error:\", error.message);\n    }\n  };\n  const executePythonScript = async () => {\n    try {\n      const response = await fetch('/execute');\n      if (response.ok) {\n        console.log(\"Python script executed successfully\");\n        alert(\"Python script executed successfully\");\n      } else {\n        console.error(\"Error executing Python script\");\n      }\n    } catch (error) {\n      console.error(\"Error:\", error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      className: \"login-form\",\n      children: [\"ID\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"ID\",\n        value: formData.ID,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), \"AccountID \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"AccountID\",\n        value: formData.AccountID,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: executePythonScript,\n      children: \"Update Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Tu/8MA5kXSTFn1sU13ExsnbQvjg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","App","_s","formData","setFormData","ID","AccountID","handleInputChange","e","name","value","target","onSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","console","log","alert","error","message","executePythonScript","className","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/user-datasubmission-react/frontend/src/App.js"],"sourcesContent":["// import { useState } from 'react';\n\n// function App() {\n//   const [formData, setFormData] = useState({\n//     ID: '',\n//     AccountID: ''\n//   });\n\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData({ ...formData, [name]: value });\n//   };\n\n//   const onSubmit = async (e) => {\n//     e.preventDefault();\n\n//     try {\n//       const response = await fetch('/details', {\n//         method: \"POST\",\n//         headers: {\n//           'Content-Type': 'application/json'\n//         },\n//         body: JSON.stringify(formData)\n//       });\n      \n//       if (response.ok) {\n//         console.log(\"data posted\")\n//         alert(\"Data submitted successfully!\");\n//       } else {\n//         console.error(\"Something went wrong\");\n//       }\n//     } catch (error) {\n//       console.error(\"Error:\", error.message);\n//     }\n//   };\n  \n//   return (\n//     <div className=\"App\">\n//       <form onSubmit={onSubmit}>\n//         ID<input type=\"text\" name=\"ID\" value={formData.ID} onChange={handleInputChange} />\n//         <br></br>\n//         AccountID <input type=\"email\" name=\"AccountID\" value={formData.AccountID} onChange={handleInputChange} />\n//         <br></br>\n//         <input type=\"submit\" value=\"ADD\" />\n//       </form>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n// import React, { useState } from 'react';\n\n// function App() {\n//   const [formData, setFormData] = useState({\n//     ID: '',\n//     AccountID: ''\n//   });\n\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData({ ...formData, [name]: value });\n//   };\n\n//   const onSubmit = async (e) => {\n//     e.preventDefault();\n\n//     try {\n//       const response = await fetch('/details', {\n//         method: \"POST\",\n//         headers: {\n//           'Content-Type': 'application/json'\n//         },\n//         body: JSON.stringify(formData)\n//       });\n\n//       if (response.ok) {\n//         console.log(\"Data submitted successfully!\");\n//       } else {\n//         console.error(\"Something went wrong\");\n//       }\n//     } catch (error) {\n//       console.error(\"Error:\", error.message);\n//     }\n//   };\n\n//   const executeRequest = async () => {\n//     try {\n//       const response = await fetch('http://localhost:8000/execute',{\n//       method: \"GET\"\n//     });\n//       if (response.ok) {\n//         const data = await response.json();\n//         console.log(data);\n//       } else {\n//         throw new Error('Network response was not ok');\n//       }\n//     } catch (error) {\n//       console.error('Fetch Error:', error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <form onSubmit={onSubmit}>\n//         ID<input type=\"text\" name=\"ID\" value={formData.ID} onChange={handleInputChange} />\n//         <br></br>\n//         AccountID <input type=\"email\" name=\"AccountID\" value={formData.AccountID} onChange={handleInputChange} />\n//         <br></br>\n//         <input type=\"submit\" value=\"ADD\" />\n//       </form>\n//       <button onClick={executeRequest}>Post</button>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport { useState } from 'react';\nimport \"./App.css\";\n\nfunction App() {\n  const [formData, setFormData] = useState({\n    ID: '',\n    AccountID: ''\n  });\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({ ...formData, [name]: value });\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      const response = await fetch('/details', {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      \n      if (response.ok) {\n        console.log(\"Data posted successfully\");\n        alert(\"Data submitted successfully!\");\n      } else {\n        console.error(\"Something went wrong\");\n      }\n    } catch (error) {\n      console.error(\"Error:\", error.message);\n    }\n  };\n\n  const executePythonScript = async () => {\n    try {\n      const response = await fetch('/execute');\n      if (response.ok) {\n        console.log(\"Python script executed successfully\");\n        alert(\"Python script executed successfully\");\n      } else {\n        console.error(\"Error executing Python script\");\n      }\n    } catch (error) {\n      console.error(\"Error:\", error.message);\n    }\n  };\n  \n  return (\n    <div className=\"auth-form-container\">\n      \n      <form onSubmit={onSubmit} className=\"login-form\">\n        ID<input type=\"text\" name=\"ID\" value={formData.ID} onChange={handleInputChange} />\n        <br></br>\n        AccountID <input type=\"text\" name=\"AccountID\" value={formData.AccountID} onChange={handleInputChange} />\n        <br></br>\n        <button >Add Account</button>\n      </form>\n      <button onClick={executePythonScript}>Update Account</button>\n    </div>\n  );\n}\n\nexport default App;\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}